name: Auto Tag on Dev-to-Main Merge

on:
  pull_request:
    types: [closed]

jobs:
  tag:
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'devops_PR'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git
        run: |
          git config user.name "markeddolphin"
          git config user.email "lacosby.milli@gmail.com"

      - name: Get latest tag
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0 || echo "0.0.0.0")
          echo "Last tag: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: versioning
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          BUILD=$(git rev-list --count HEAD)

          # Extract major.minor.patch (ignore build)
          VERSION=$(echo "$TAG" | cut -d. -f1-3)
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"

          MERGE_COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Merge commit message: $MERGE_COMMIT_MSG"

          if [[ "$MERGE_COMMIT_MSG" =~ (.*!.*) ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ "$MERGE_COMMIT_MSG" =~ ^feat ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [[ "$MERGE_COMMIT_MSG" =~ ^fix ]]; then
            PATCH=$((PATCH + 1))
          fi

          BASE_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          FULL_VERSION="${BASE_VERSION}.${BUILD}"
          echo "New version: $FULL_VERSION"

          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT

      - name: Update version.txt
        run: |
          echo "${{ steps.versioning.outputs.base_version }}" > version.txt
          git add version.txt
          git commit -m "chore: update version.txt to ${{ steps.versioning.outputs.base_version }}"
          git push origin main

      - name: Create and push tag
        run: |
          git tag -a "${{ steps.versioning.outputs.full_version }}" -m "Auto tag: ${{ steps.versioning.outputs.full_version }} from dev->main merge"
          git push origin "${{ steps.versioning.outputs.full_version }}"
